name: BuildReleaseApk
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  buildReleaseApk:
    runs-on: macos-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Specify node version
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Use npm caches
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Use specific Java version for sdkmanager to work
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Install node_modules
        run: npm install --production

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.6
          bundler-cache: true

      - name: Cache Ruby Gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Generate Build Number based on timestamp
        id: build_number
        run: |
          NEW_BUILD_NUMBER="$(date +%s)"
          echo "NEW_BUILD_NUMBER=$NEW_BUILD_NUMBER" >> $GITHUB_ENV

      - name: Prepare Keystore
        run: bundle exec fastlane android prepare_keystore
        env:
          KEYSTORE_FILE_HEX: ${{ secrets.KEYSTORE_FILE_HEX }}

      - name: Update Version Code, Build, and Sign APK
        id: build_and_sign_apk
        run: |
          bundle exec fastlane android update_version_build_and_sign_apk
        env:
          BUILD_NUMBER: ${{ env.NEW_BUILD_NUMBER }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Determine APK Filename and Path
        id: determine_apk_path
        run: |
          VERSION_NAME=$(grep versionName android/app/build.gradle | awk '{print $2}' | tr -d '"')
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "::set-output name=version_name::$VERSION_NAME"

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: signed-apk
          path: ${{ env.APK_PATH }}

  browserstack:
    runs-on: ubuntu-latest
    needs: buildReleaseApk
    if: ${{ github.event_name == 'pull_request' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.6
          bundler-cache: true

      - name: Install dependencies with Bundler
        run: bundle install --jobs 4 --retry 3

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: signed-apk

      - name: Set APK Path
        run: |
          NEW_BUILD_NUMBER=$(date +%s)
          echo "NEW_BUILD_NUMBER=$NEW_BUILD_NUMBER" >> $GITHUB_ENV
          echo "::set-output name=build_number::$NEW_BUILD_NUMBER"

      - name: Build
        env:
          KEYSTORE_FILE_HEX: ${{ secrets.KEYSTORE_FILE_HEX }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          BUILD_NUMBER: ${{ env.NEW_BUILD_NUMBER }}
        run: ./scripts/build-release-apk.sh

      - uses: actions/upload-artifact@v2
        if: success()
        with:
          name: BlueWallet-${{ env.VERSION_NAME }}(${{ env.NEW_BUILD_NUMBER }}).apk
          path: ./android/app/build/outputs/apk/release/BlueWallet-${{ env.VERSION_NAME }}(${{ env.NEW_BUILD_NUMBER }}).apk
